                              1 ;/***************************************************************************
                              2 ; *                                                                         *
                              3 ; * Module  : rand.s                                                        *
                              4 ; *                                                                         *
                              5 ; * Purpose : A rand() generator using the linear congruential method       *
                              6 ; *                                                                         *
                              7 ; * Version : 1.01, January 7 1998                                          *
                              8 ; *             Added _initrand to set seed without recompiling             *
                              9 ; *           1, January 6 1998                                             *
                             10 ; *                                                                         *
                             11 ; * Author  : Luc Van den Borre ( Homepage : NOC.BASE.ORG )                 *
                             12 ; *                                                                         *
                             13 ; **************************************************************************/
                             14 
                             15 	;; BANKED:	checked
                             16 	
                             17 	;; Why use an algorithm for generating random numbers?
                             18 	;;
                             19 	;; - Given a certain seed value, the same sequence of random numbers is generated
                             20 	;;   every time. This is a good thing when debugging (reproducible). On the other
                             21 	;;   hand, you've got 2^16 seed values, each of which will produce a sequence of
                             22 	;;   numbers that stays different for any of the other sequences for 'an appreciable
                             23 	;;   time.' (I can't say how long exactly.)
                             24 	;;
                             25 	;; - The linear congruential method is one of the 'best' random number generators
                             26 	;;   around. However, this implementation uses a 16 bit accumulator, while at least
                             27 	;;   32 bits are needed for a generator that passes all the statistical tests.
                             28 	;;   Still, I'm relatively confident that this is random enough for even the most
                             29 	;;   demanding game.
                             30 	;;
                             31 	;;   Compare this to getting random values from one of the hardware registers
                             32 	;;   (not reproducible, might not have all values). An array might be the best bet
                             33 	;;   if you don't need a lot of values (or have lots of memory spare),
                             34 	;;   or if you want values to be within a certain range.
                             35 	;;   And both would be faster than this. Also, this definitely isn't the fastest
                             36 	;;   algorithm I know, and certainly for games less strict algorithms might be
                             37 	;;   appropriate (shift and xor ?).
                             38 	;;   It's your choice - but if you're doing Monte Carlo physics simulations on the
                             39 	;;   GameBoy, this is a safe bet!
                             40 
                             41 	.include	"global.s"
                    0001      1 	.NEAR_CALLS = 1
                              2 	;; Changed by astorgb.pl to 1
                    0000      3 	__RGBDS__	= 0
                              4 
                              5 	;;  Screen dimensions 
                    0013      6 	.MAXCURSPOSX	= 0x13	; In tiles
                    0011      7 	.MAXCURSPOSY	= 0x11
                              8 
                    0080      9 	.START		= 0x80
                    0040     10 	.SELECT		= 0x40
                    0020     11 	.B		= 0x20
                    0010     12 	.A		= 0x10
                    0008     13 	.DOWN		= 0x08
                    0004     14 	.UP		= 0x04
                    0002     15 	.LEFT		= 0x02
                    0001     16 	.RIGHT		= 0x01
                             17 
                    00A0     18 	.SCREENWIDTH	= 0xA0
                    0090     19 	.SCREENHEIGHT	= 0x90
                    0007     20 	.MINWNDPOSX	= 0x07
                    0000     21 	.MINWNDPOSY	= 0x00
                    00A6     22 	.MAXWNDPOSX	= 0xA6
                    008F     23 	.MAXWNDPOSY	= 0x8F
                             24 
                    0001     25 	.VBL_IFLAG	= 0x01
                    0002     26 	.LCD_IFLAG	= 0x02
                    0004     27 	.TIM_IFLAG	= 0x04
                    0008     28 	.SIO_IFLAG	= 0x08
                    0010     29 	.JOY_IFLAG	= 0x10
                             30  
                    0000     31 	.P1		= 0x00	; Joystick: 1.1.P15.P14.P13.P12.P11.P10
                    0001     32 	.SB		= 0x01	; Serial IO data buffer
                    0002     33 	.SC		= 0x02	; Serial IO control register
                    0004     34 	.DIV		= 0x04	; Divider register
                    0005     35 	.TIMA		= 0x05	; Timer counter
                    0006     36 	.TMA		= 0x06	; Timer modulo
                    0007     37 	.TAC		= 0x07	; Timer control
                    000F     38 	.IF		= 0x0F	; Interrupt flags: 0.0.0.JST.SIO.TIM.LCD.VBL
                    0010     39 	.NR10		= 0x10	; Sound register
                    0011     40 	.NR11		= 0x11	; Sound register
                    0012     41 	.NR12		= 0x12	; Sound register
                    0013     42 	.NR13		= 0x13	; Sound register
                    0014     43 	.NR14		= 0x14	; Sound register
                    0016     44 	.NR21		= 0x16	; Sound register
                    0017     45 	.NR22		= 0x17	; Sound register
                    0018     46 	.NR23		= 0x18	; Sound register
                    0019     47 	.NR24		= 0x19	; Sound register
                    001A     48 	.NR30		= 0x1A	; Sound register
                    001B     49 	.NR31		= 0x1B	; Sound register
                    001C     50 	.NR32		= 0x1C	; Sound register
                    001D     51 	.NR33		= 0x1D	; Sound register
                    001E     52 	.NR34		= 0x1E	; Sound register
                    0020     53 	.NR41		= 0x20	; Sound register
                    0021     54 	.NR42		= 0x21	; Sound register
                    0022     55 	.NR43		= 0x22	; Sound register
                    0023     56 	.NR44		= 0x23	; Sound register
                    0024     57 	.NR50		= 0x24	; Sound register
                    0025     58 	.NR51		= 0x25	; Sound register
                    0026     59 	.NR52		= 0x26	; Sound register
                    0040     60 	.LCDC		= 0x40	; LCD control
                    0041     61 	.STAT		= 0x41	; LCD status
                    0042     62 	.SCY		= 0x42	; Scroll Y
                    0043     63 	.SCX		= 0x43	; Scroll X
                    0044     64 	.LY		= 0x44	; LCDC Y-coordinate
                    0045     65 	.LYC		= 0x45	; LY compare
                    0046     66 	.DMA		= 0x46	; DMA transfer
                    0047     67 	.BGP		= 0x47	; BG palette data
                    0048     68 	.OBP0		= 0x48	; OBJ palette 0 data
                    0049     69 	.OBP1		= 0x49	; OBJ palette 1 data
                    004A     70 	.WY		= 0x4A	; Window Y coordinate
                    004B     71 	.WX		= 0x4B	; Window X coordinate
                    004D     72 	.KEY1		= 0x4D	; CPU speed
                    004F     73 	.VBK		= 0x4F	; VRAM bank
                    0051     74 	.HDMA1		= 0x51	; DMA control 1
                    0052     75 	.HDMA2		= 0x52	; DMA control 2
                    0053     76 	.HDMA3		= 0x53	; DMA control 3
                    0054     77 	.HDMA4		= 0x54	; DMA control 4
                    0055     78 	.HDMA5		= 0x55	; DMA control 5
                    0056     79 	.RP		= 0x56	; IR port
                    0068     80 	.BCPS		= 0x68	; BG color palette specification
                    0069     81 	.BCPD		= 0x69	; BG color palette data
                    006A     82 	.OCPS		= 0x6A	; OBJ color palette specification
                    006B     83 	.OCPD		= 0x6B	; OBJ color palette data
                    0070     84 	.SVBK		= 0x70	; WRAM bank
                    00FF     85 	.IE		= 0xFF	; Interrupt enable
                             86 
                    0001     87 	.G_MODE		= 0x01	; Graphic mode
                    0002     88 	.T_MODE		= 0x02	; Text mode (bit 2)
                    0002     89 	.T_MODE_OUT	= 0x02	; Text mode output only
                    0003     90 	.T_MODE_INOUT	= 0x03	; Text mode with input
                    0004     91 	.M_NO_SCROLL	= 0x04	; Disables scrolling of the screen in text mode
                    0008     92 	.M_NO_INTERP	= 0x08	; Disables special character interpretation
                             93 
                             94 	
                             95 	;; Status codes for IO
                    0000     96 	.IO_IDLE	= 0x00
                    0001     97 	.IO_SENDING	= 0x01
                    0002     98 	.IO_RECEIVING	= 0x02
                    0004     99 	.IO_ERROR	= 0x04
                            100 
                            101 	;; Type of IO data
                    0066    102 	.DT_IDLE	= 0x66
                    0055    103 	.DT_RECEIVING	= 0x55
                            104 
                            105 	;; Table of routines for modes
                            106 	;.MODE_TABLE	= 0x01E0
                    01E2    107     .MODE_TABLE	= 0x01E2
                            108     
                            109 	;; C related
                            110 	;; Overheap of a banked call.  Used for parameters
                            111 	;;  = ret + real ret + bank
                            112 
                    0001    113 	.if .NEAR_CALLS
                    0002    114 	.BANKOV		= 2
                            115 	.else
                            116 	.BANKOV		= 6
                            117 	.endif
                            118 	
                            119 	.globl	banked_call
                            120 	.globl	banked_ret
                            121 	
                            122 	;; Global variables
                            123 	.globl	.mode
                            124 	.globl	__io_out
                            125 	.globl	__io_in
                            126 	.globl	__io_status
                            127 
                            128 	;; Global routines
                            129 	.globl	.display_off
                            130 	.globl	.wait_vbl_done
                            131 
                            132 	;; Interrupt routines 
                            133 	.globl	.add_VBL
                            134 	.globl	.add_LCD
                            135 	.globl	.add_TIM
                            136 	.globl	.add_SIO
                            137 	.globl	.add_JOY
                            138 
                            139 	;; Symbols defined at link time
                            140 	.globl	.STACK
                            141 	.globl	.OAM
                            142 	.globl	.refresh_OAM
                            143 
                            144 	;; Main user routine	
                            145 	.globl	_main
                             42 
                             43 	.area	_BSS
   0000                      44 .randhi::			; Storage for last random number (or seed)
   0000                      45 	.ds	0x01
   0001                      46 .randlo::
   0001                      47 	.ds	0x01
                             48 
                             49 	.area	_CODE
                             50 
                             51 	;; Random number generator using the linear congruential method
                             52 	;;  X(n+1) = (a*X(n)+c) mod m
                             53 	;; with a = 17, m = 16 and c = $5c93 (arbitrarily)
                             54 	;; The seed value is also chosen arbitrarily as $a27e
                             55 	;; Ref : D. E. Knuth, "The Art of Computer Programming" , Volume 2
                             56 	;;
                             57 	;; Exit conditions
                             58 	;;   DE = Random number [0,2^16-1]
                             59 	;;
                             60 	;; Registers used:
                             61 	;;   A, HL (need not be saved) and DE (return register)
                             62 	;;
                             63 
   0000                      64 _rand::				; Banked
   0000                      65 _randw::			; Banked
   0000 FA 01 00             66 	LD	A,(.randlo)
   0003 6F                   67 	LD	L,A
   0004 5F                   68 	LD	E,A		; Save randlo
   0005 FA 00 00             69 	LD	A,(.randhi)
   0008 57                   70 	LD	D,A		; Save randhi
                             71 
   0009 CB 25                72 	SLA	L		; * 16
   000B 17                   73 	RLA
   000C CB 25                74 	SLA	L
   000E 17                   75 	RLA
   000F CB 25                76 	SLA	L
   0011 17                   77 	RLA
   0012 CB 25                78 	SLA	L
   0014 17                   79 	RLA
   0015 67                   80 	LD	H,A		; Save randhi*16
                             81 
   0016 7B                   82 	LD	A,E		; Old randlo
   0017 85                   83 	ADD	A,L		; Add randlo*16
   0018 6F                   84 	LD	L,A		; Save randlo*17
                             85 
   0019 7C                   86 	LD	A,H		; randhi*16
   001A 8A                   87 	ADC	A,D		; Add old randhi
   001B 67                   88 	LD	H,A		; Save randhi*17
                             89 
   001C 7D                   90 	LD	A,L		; randlo*17
   001D C6 93                91 	ADD	A,#0x93
   001F EA 01 00             92 	LD	(.randlo),A
   0022 57                   93 	LD	D,A		; Return register
   0023 7C                   94 	LD	A,H		; randhi*17
   0024 CE 5C                95 	ADC	A,#0x5c
   0026 EA 00 00             96 	LD	(.randhi),A
   0029 5F                   97 	LD	E,A		; Return register
                             98 
                             99 	;; Note D is the low byte,E the high byte. This is intentional because
                            100 	;; the high byte can be slightly 'more random' than the low byte, and I presume
                            101 	;; most will cast the return value to a UBYTE. As if someone will use this, tha!
   002A C9                  102 	RET
                            103 
                            104 	;; This sets the seed value. Call it whenever you like
                            105 	;;
                            106 	;; Exit conditions
                            107 	;;   None
                            108 	;;
                            109 	;; Registers used:
                            110 	;;   A, HL (need not be saved) and DE (return register)
                            111 	;;
                            112 	.area	_BASE
   0000                     113 _initrand::			; Non banked
   0000 F8 02               114 	LDA	HL,2(SP)
   0002                     115 .initrand::
   0002 2A                  116 	LD	A,(HL+)
   0003 EA 01 00            117 	LD	(.randlo),A
   0006 7E                  118 	LD	A,(HL)
   0007 EA 00 00            119 	LD	(.randhi),A
   000A C9                  120 	RET
ASxxxx Assembler V01.75 + SDCC mods  (GameBoy Z80-like CPU), page 1.

Symbol Table

    .A                                                          =  0010 
    .B                                                          =  0020 
    .BANKOV                                                     =  0002 
    .BCPD                                                       =  0069 
    .BCPS                                                       =  0068 
    .BGP                                                        =  0047 
    .DIV                                                        =  0004 
    .DMA                                                        =  0046 
    .DOWN                                                       =  0008 
    .DT_IDLE                                                    =  0066 
    .DT_RECEIVING                                               =  0055 
    .G_MODE                                                     =  0001 
    .HDMA1                                                      =  0051 
    .HDMA2                                                      =  0052 
    .HDMA3                                                      =  0053 
    .HDMA4                                                      =  0054 
    .HDMA5                                                      =  0055 
    .IE                                                         =  00FF 
    .IF                                                         =  000F 
    .IO_ERROR                                                   =  0004 
    .IO_IDLE                                                    =  0000 
    .IO_RECEIVING                                               =  0002 
    .IO_SENDING                                                 =  0001 
    .JOY_IFLAG                                                  =  0010 
    .KEY1                                                       =  004D 
    .LCDC                                                       =  0040 
    .LCD_IFLAG                                                  =  0002 
    .LEFT                                                       =  0002 
    .LY                                                         =  0044 
    .LYC                                                        =  0045 
    .MAXCURSPOSX                                                =  0013 
    .MAXCURSPOSY                                                =  0011 
    .MAXWNDPOSX                                                 =  00A6 
    .MAXWNDPOSY                                                 =  008F 
    .MINWNDPOSX                                                 =  0007 
    .MINWNDPOSY                                                 =  0000 
    .MODE_TABLE                                                 =  01E2 
    .M_NO_INTERP                                                =  0008 
    .M_NO_SCROLL                                                =  0004 
    .NEAR_CALLS                                                 =  0001 
    .NR10                                                       =  0010 
    .NR11                                                       =  0011 
    .NR12                                                       =  0012 
    .NR13                                                       =  0013 
    .NR14                                                       =  0014 
    .NR21                                                       =  0016 
    .NR22                                                       =  0017 
    .NR23                                                       =  0018 
    .NR24                                                       =  0019 
    .NR30                                                       =  001A 
    .NR31                                                       =  001B 
    .NR32                                                       =  001C 
    .NR33                                                       =  001D 
    .NR34                                                       =  001E 
    .NR41                                                       =  0020 
    .NR42                                                       =  0021 
    .NR43                                                       =  0022 
    .NR44                                                       =  0023 
    .NR50                                                       =  0024 
    .NR51                                                       =  0025 
    .NR52                                                       =  0026 
    .OAM                                                           **** GX
    .OBP0                                                       =  0048 
    .OBP1                                                       =  0049 
    .OCPD                                                       =  006B 
    .OCPS                                                       =  006A 
    .P1                                                         =  0000 
    .RIGHT                                                      =  0001 
    .RP                                                         =  0056 
    .SB                                                         =  0001 
    .SC                                                         =  0002 
    .SCREENHEIGHT                                               =  0090 
    .SCREENWIDTH                                                =  00A0 
    .SCX                                                        =  0043 
    .SCY                                                        =  0042 
    .SELECT                                                     =  0040 
    .SIO_IFLAG                                                  =  0008 
    .STACK                                                         **** GX
    .START                                                      =  0080 
    .STAT                                                       =  0041 
    .SVBK                                                       =  0070 
    .TAC                                                        =  0007 
    .TIMA                                                       =  0005 
    .TIM_IFLAG                                                  =  0004 
    .TMA                                                        =  0006 
    .T_MODE                                                     =  0002 
    .T_MODE_INOUT                                               =  0003 
    .T_MODE_OUT                                                 =  0002 
    .UP                                                         =  0004 
    .VBK                                                        =  004F 
    .VBL_IFLAG                                                  =  0001 
    .WX                                                         =  004B 
    .WY                                                         =  004A 
    .add_JOY                                                       **** GX
    .add_LCD                                                       **** GX
    .add_SIO                                                       **** GX
    .add_TIM                                                       **** GX
    .add_VBL                                                       **** GX
    .display_off                                                   **** GX
  2 .initrand                                                      0002 GR
    .mode                                                          **** GX
  1 .randhi                                                        0000 GR
  1 .randlo                                                        0001 GR
    .refresh_OAM                                                   **** GX
    .wait_vbl_done                                                 **** GX
    __RGBDS__                                                   =  0000 
    __io_in                                                        **** GX
    __io_out                                                       **** GX
    __io_status                                                    **** GX
  2 _initrand                                                      0000 GR
    _main                                                          **** GX
  0 _rand                                                          0000 GR
  0 _randw                                                         0000 GR
    banked_call                                                    **** GX
    banked_ret                                                     **** GX

ASxxxx Assembler V01.75 + SDCC mods  (GameBoy Z80-like CPU), page 2.

Area Table

   0 _CODE                                                          size   2B   flags 0
   1 _BSS                                                           size    2   flags 0
   2 _BASE                                                          size    B   flags 0
