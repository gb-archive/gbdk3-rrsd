                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 2.9.0 #5416 (Apr  7 2010) (MINGW32)
                              4 ; This file was generated Sun Dec 17 10:44:43 2017
                              5 ;--------------------------------------------------------
                              6 	.module gprintln
                              7 	.optsdcc -mgbz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _gprintln
                             13 ;--------------------------------------------------------
                             14 ;  ram data
                             15 ;--------------------------------------------------------
                             16 	.area _DATA
                             17 ;--------------------------------------------------------
                             18 ; overlayable items in  ram 
                             19 ;--------------------------------------------------------
                             20 	.area _OVERLAY
                             21 ;--------------------------------------------------------
                             22 ; external initialized ram data
                             23 ;--------------------------------------------------------
                             24 ;--------------------------------------------------------
                             25 ; global & static initialisations
                             26 ;--------------------------------------------------------
                             27 	.area _HOME
                             28 	.area _GSINIT
                             29 	.area _GSFINAL
                             30 	.area _GSINIT
                             31 ;--------------------------------------------------------
                             32 ; Home
                             33 ;--------------------------------------------------------
                             34 	.area _HOME
                             35 	.area _HOME
                             36 ;--------------------------------------------------------
                             37 ; code
                             38 ;--------------------------------------------------------
                             39 	.area _CODE
                             40 ;gprintln.c:7: void gprintln(INT16 number, INT8 radix, INT8 signed_value)
                             41 ;	---------------------------------
                             42 ; Function gprintln
                             43 ; ---------------------------------
   0000                      44 _gprintln:
                             45 	
   0000 F5                   46 	push	af
   0001 F5                   47 	push	af
                             48 ;gprintln.c:11: if(number < 0 && signed_value) {
   0002 F8 07                49 	lda	hl,7(sp)
   0004 7E                   50 	ld	a,(hl)
   0005 CB 7F                51 	bit	7,a
   0007 CAr25s00             52 	jp	Z,00102$
   000A AF                   53 	xor	a,a
   000B 23                   54 	inc	hl
   000C 23                   55 	inc	hl
   000D B6                   56 	or	a,(hl)
   000E CAr25s00             57 	jp	Z,00102$
                             58 ;gprintln.c:12: wrtchr('-');
   0011 3E 2D                59 	ld	a,#0x2D
   0013 F5                   60 	push	af
   0014 33                   61 	inc	sp
   0015 CDr00s00             62 	call	_wrtchr
   0018 E8 01                63 	lda	sp,1(sp)
                             64 ;gprintln.c:13: number = -number;
   001A AF                   65 	xor	a,a
   001B F8 06                66 	lda	hl,6(sp)
   001D 3E 00                67 	ld	a,#0x00
   001F 9E                   68 	sbc	a,(hl)
   0020 22                   69 	ld	(hl+),a
   0021 3E 00                70 	ld	a,#0x00
   0023 9E                   71 	sbc	a,(hl)
   0024 77                   72 	ld	(hl),a
   0025                      73 00102$:
                             74 ;gprintln.c:15: if((l = (UINT16)number / (UINT16)radix) != 0)
   0025 F8 06                75 	lda	hl,6(sp)
   0027 4E                   76 	ld	c,(hl)
   0028 23                   77 	inc	hl
   0029 46                   78 	ld	b,(hl)
   002A 23                   79 	inc	hl
   002B 7E                   80 	ld	a,(hl)
   002C F8 00                81 	lda	hl,0(sp)
   002E 77                   82 	ld	(hl),a
   002F F8 08                83 	lda	hl,8(sp)
   0031 7E                   84 	ld	a,(hl)
   0032 17                   85 	rla	
   0033 9F                   86 	sbc	a,a
   0034 F8 01                87 	lda	hl,1(sp)
   0036 32                   88 	ld	(hl-),a
   0037 2A                   89 	ld	a,(hl+)
   0038 66                   90 	ld	h,(hl)
   0039 6F                   91 	ld	l,a
   003A E5                   92 	push	hl
   003B C5                   93 	push	bc
   003C CDr00s00             94 	call	__divuint_rrx_s
   003F E8 04                95 	lda	sp,4(sp)
   0041 F8 03                96 	lda	hl,3(sp)
   0043 72                   97 	ld	(hl),d
   0044 2B                   98 	dec	hl
   0045 73                   99 	ld	(hl),e
   0046 F8 02               100 	lda	hl,2(sp)
   0048 4E                  101 	ld	c,(hl)
   0049 23                  102 	inc	hl
   004A 46                  103 	ld	b,(hl)
   004B 2B                  104 	dec	hl
   004C 2A                  105 	ld	a,(hl+)
   004D B6                  106 	or	a,(hl)
   004E CAr60s00            107 	jp	Z,00105$
                            108 ;gprintln.c:16: gprintln(l, radix, UNSIGNED);
   0051 3E 00               109 	ld	a,#0x00
   0053 F5                  110 	push	af
   0054 33                  111 	inc	sp
   0055 F8 09               112 	lda	hl,9(sp)
   0057 7E                  113 	ld	a,(hl)
   0058 F5                  114 	push	af
   0059 33                  115 	inc	sp
   005A C5                  116 	push	bc
   005B CDr00s00            117 	call	_gprintln
   005E E8 04               118 	lda	sp,4(sp)
   0060                     119 00105$:
                            120 ;gprintln.c:17: wrtchr(digits[(UINT16)number % (UINT16)radix]);
   0060 F8 06               121 	lda	hl,6(sp)
   0062 4E                  122 	ld	c,(hl)
   0063 23                  123 	inc	hl
   0064 46                  124 	ld	b,(hl)
   0065 F8 00               125 	lda	hl,0(sp)
   0067 2A                  126 	ld	a,(hl+)
   0068 66                  127 	ld	h,(hl)
   0069 6F                  128 	ld	l,a
   006A E5                  129 	push	hl
   006B C5                  130 	push	bc
   006C CDr00s00            131 	call	__moduint_rrx_s
   006F E8 04               132 	lda	sp,4(sp)
   0071 42                  133 	ld	b,d
   0072 4B                  134 	ld	c,e
   0073 21r00s00            135 	ld	hl,#_digits
   0076 7E                  136 	ld	a,(hl)
   0077 81                  137 	add	a,c
   0078 21r01s00            138 	ld	hl,#_digits + 1
   007B 4F                  139 	ld	c,a
   007C 21r01s00            140 	ld	hl,#_digits + 1
   007F 7E                  141 	ld	a,(hl)
   0080 88                  142 	adc	a,b
   0081 47                  143 	ld	b,a
   0082 0A                  144 	ld	a,(bc)
   0083 4F                  145 	ld	c,a
   0084 F5                  146 	push	af
   0085 33                  147 	inc	sp
   0086 CDr00s00            148 	call	_wrtchr
   0089 E8 01               149 	lda	sp,1(sp)
   008B                     150 00106$:
   008B E8 04               151 	lda	sp,4(sp)
   008D C9                  152 ret
                            153 	.area _CODE
                            154 	.area _CABS
